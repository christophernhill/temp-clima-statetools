# Testing reference values and precisions
# Each test block of varr and parr should be followed by an append to refVals, refPrecs arrays.
# e.g.
#   refVals=[]
#   refPrecs=[]
#
#   varr = ..........
#   par  = ..........
#
#   append!(refVals ,[ varr ] )
#   append!(refPrecs,[ parr ] )
#
#   varr = ..........
#   par  = ..........
#
#   append!(refVals ,[ varr ] )
#   append!(refPrecs,[ parr ] )
#
#   varr = ..........
#   par  = ..........
#
#   append!(refVals ,[ varr ] )
#   append!(refPrecs,[ parr ] )
#
#   etc.....
#
#   Now for real!
#

    refVals=[]
    refPrecs=[]

# ========== Test number 1 reference values and precision match template. =======
# ========== /Users/chrishill/projects/github.com/christophernhill/temp-clima-statetools/test/Ocean/HydrostaticBoussinesq/test_ocean_gyre.jl test reference values ======================================
# BEGIN SCPRINT
# varr - reference values (from reference run)    
# parr - digits match precision (hand edit as needed) 
#
# [
#  [ MPIStateArray Name, Field Name, Maximum, Minimum, Mean, Standard Deviation ],
#  [         :                :          :        :      :          :           ],
# ]
varr = [
 [       "Q",   "u[1]", -3.59778679463888528822e-02,  5.01928778954490867337e-02,  2.83803468294735374705e-03,  1.05060704225753490104e-02 ],
 [       "Q",   "u[2]", -9.26452454282719467527e-02,  1.39872546728803504035e-01, -1.62698602407778140574e-03,  1.57357491483027800427e-02 ],
 [       "Q",       :η, -6.30165702433614582922e-01,  6.33404668791970770769e-01, -1.31282898186722146727e-03,  2.25772249752118042698e-01 ],
 [       "Q",       :θ,  1.83052441799683651095e-04,  9.07785968136042953347e+00,  2.49948931004312990822e+00,  2.19725931047924305517e+00 ],
 [   "s_aux",       :w, -4.66550692387658773709e-05,  5.32354027505636473385e-05,  5.98027917344120240608e-07,  9.20278283436413649258e-06 ],
 [   "s_aux",    :pkin, -9.00533429624292502957e-01,  0.00000000000000000000e+00, -3.32071265285466377115e-01,  2.56228627299759592617e-01 ],
 [   "s_aux",     :wz0, -2.22558577265989132631e-05,  1.56369446171690522254e-05, -4.00244401014146488441e-08,  7.76497283462201325608e-06 ],
 [   "s_aux",       :y,  0.00000000000000000000e+00,  4.00000000000000046566e+06,  2.00000000000000000000e+06,  1.18025270281469495967e+06 ],
 [ "s_gflux", "ν∇u[1]", -2.06824544564443305386e-03,  2.10725394472017959341e-03, -9.69101788621529115885e-09,  1.53747692558976750557e-04 ],
 [ "s_gflux", "ν∇u[2]", -1.94314462677630268167e-03,  2.17086492362111556712e-03, -7.77203648741705719824e-06,  3.09214571122312241631e-04 ],
 [ "s_gflux", "ν∇u[3]", -6.72438338114780143349e-06,  1.36489565058806637326e-05, -8.19211064561947104447e-09,  1.00066636973161378648e-06 ],
 [ "s_gflux", "ν∇u[4]", -6.97922586138846872544e-03,  6.57869353783981959671e-03,  8.43142670443481648485e-06,  3.61267209358849831959e-04 ],
 [ "s_gflux", "ν∇u[5]", -1.36616260639330858867e-03,  7.17512548791171111268e-03,  1.13785870581942882395e-05,  3.91519254426875838206e-04 ],
 [ "s_gflux", "ν∇u[6]", -1.28552913530994559105e-05,  1.39419859113334157963e-05,  3.29879517392407701132e-08,  1.95040079335267552097e-06 ],
 [ "s_gflux", "κ∇θ[1]", -7.80471961829605492692e-05,  6.55954862114631516174e-05,  2.68569592915582687506e-06,  8.51040892311270720505e-06 ],
 [ "s_gflux", "κ∇θ[2]", -3.09381537837955574582e-03,  7.11606486401830450961e-05, -9.81952901245213352621e-04,  8.31319402628701714653e-04 ],
 [ "s_gflux", "κ∇θ[3]", -4.00848028291685598741e-05,  4.21477019037163911437e-05,  5.35074041546433375858e-07,  3.49302376791311483794e-06 ],
]
parr = [
 [       "Q",   "u[1]",    16,    16,    16,    16 ],
 [       "Q",   "u[2]",    16,    16,    16,    16 ],
 [       "Q",       :η,    16,    16,    16,    16 ],
 [       "Q",       :θ,    16,    16,    16,    16 ],
 [   "s_aux",       :w,    16,    16,    16,    16 ],
 [   "s_aux",    :pkin,    16,    16,    16,    16 ],
 [   "s_aux",     :wz0,    16,    16,    16,    16 ],
 [   "s_aux",       :y,    16,    16,    16,    16 ],
 [ "s_gflux", "ν∇u[1]",    16,    16,    16,    16 ],
 [ "s_gflux", "ν∇u[2]",    16,    16,    16,    16 ],
 [ "s_gflux", "ν∇u[3]",    16,    16,    16,    16 ],
 [ "s_gflux", "ν∇u[4]",    16,    16,    16,    16 ],
 [ "s_gflux", "ν∇u[5]",    16,    16,    16,    16 ],
 [ "s_gflux", "ν∇u[6]",    16,    16,    16,    16 ],
 [ "s_gflux", "κ∇θ[1]",    16,    16,    16,    16 ],
 [ "s_gflux", "κ∇θ[2]",    16,    16,    16,    16 ],
 [ "s_gflux", "κ∇θ[3]",    16,    16,    16,    16 ],
]
# END SCPRINT
# ====================================================================================

    append!(refVals ,[ varr ] )
    append!(refPrecs,[ parr ] )

# ========== Test number 2 reference values and precision match template. =======
# ========== /Users/chrishill/projects/github.com/christophernhill/temp-clima-statetools/test/Ocean/HydrostaticBoussinesq/test_ocean_gyre.jl test reference values ======================================
# BEGIN SCPRINT
# varr - reference values (from reference run)    
# parr - digits match precision (hand edit as needed) 
#
# [
#  [ MPIStateArray Name, Field Name, Maximum, Minimum, Mean, Standard Deviation ],
#  [         :                :          :        :      :          :           ],
# ]
varr = [
 [       "Q",   "u[1]", -3.51638404017009173486e-02,  4.94225057273246295986e-02,  2.83904931219799375880e-03,  1.04749016934846689991e-02 ],
 [       "Q",   "u[2]", -9.26085834641538763190e-02,  1.39756192672985363190e-01, -1.62799155652717814774e-03,  1.57292018454650156523e-02 ],
 [       "Q",       :η, -6.30069521882303917870e-01,  6.33395057869419741969e-01, -1.30945348983780153300e-03,  2.25761377738514401603e-01 ],
 [       "Q",       :θ,  2.45431391299283721552e-04,  9.10409446216010209696e+00,  2.49956206091624677512e+00,  2.19743337160574592204e+00 ],
 [   "s_aux",       :w, -4.65380926217049976294e-05,  5.32786044282054983183e-05,  5.96247453366151783559e-07,  9.18132179475007112457e-06 ],
 [   "s_aux",    :pkin, -9.00528020963693998091e-01,  0.00000000000000000000e+00, -3.32075724970535168801e-01,  2.56223094275825125088e-01 ],
 [   "s_aux",     :wz0, -2.24072103048014469636e-05,  1.57821170256836880257e-05, -3.86266307359543768906e-08,  7.80155199271137839872e-06 ],
 [   "s_aux",       :y,  0.00000000000000000000e+00,  4.00000000000000046566e+06,  2.00000000000000000000e+06,  1.18025270281469495967e+06 ],
 [ "s_gflux", "ν∇u[1]", -2.07289404606551602370e-03,  2.11337478374183868404e-03, -1.19162205554634855510e-08,  1.53565789289755255881e-04 ],
 [ "s_gflux", "ν∇u[2]", -1.94909369917830991616e-03,  2.19803235389647196041e-03, -7.75991235179854585554e-06,  3.10967010848320552559e-04 ],
 [ "s_gflux", "ν∇u[3]", -6.69034894099525799267e-06,  1.37170737241346336682e-05, -6.70679387514363510802e-09,  1.00013771465235213895e-06 ],
 [ "s_gflux", "ν∇u[4]", -6.96516642499018633766e-03,  6.56667174773585549108e-03,  8.46152377430086044497e-06,  3.60173702076947124980e-04 ],
 [ "s_gflux", "ν∇u[5]", -1.36543368694601839619e-03,  7.16202310434030809533e-03,  1.13401040281857965316e-05,  3.90507476641641147839e-04 ],
 [ "s_gflux", "ν∇u[6]", -1.28409916856355031705e-05,  1.39191012067614129438e-05,  3.26798777590846189905e-08,  1.94485429412658675816e-06 ],
 [ "s_gflux", "κ∇θ[1]", -8.53462774462241768707e-05,  7.20879250078479497923e-05,  2.69103036967421672444e-06,  8.56306540728509159234e-06 ],
 [ "s_gflux", "κ∇θ[2]", -3.07765006271531636403e-03,  7.23763001421231637897e-05, -9.82330006125931368133e-04,  8.30925101329299813264e-04 ],
 [ "s_gflux", "κ∇θ[3]", -3.41401758019507100845e-05,  1.15713791733997008930e-05,  4.54398053251340639572e-07,  1.66507147793846224380e-06 ],
]
parr = [
 [       "Q",   "u[1]",    16,    16,    16,    16 ],
 [       "Q",   "u[2]",    16,    16,    16,    16 ],
 [       "Q",       :η,    16,    16,    16,    16 ],
 [       "Q",       :θ,    16,    16,    16,    16 ],
 [   "s_aux",       :w,    16,    16,    16,    16 ],
 [   "s_aux",    :pkin,    16,    16,    16,    16 ],
 [   "s_aux",     :wz0,    16,    16,    16,    16 ],
 [   "s_aux",       :y,    16,    16,    16,    16 ],
 [ "s_gflux", "ν∇u[1]",    16,    16,    16,    16 ],
 [ "s_gflux", "ν∇u[2]",    16,    16,    16,    16 ],
 [ "s_gflux", "ν∇u[3]",    16,    16,    16,    16 ],
 [ "s_gflux", "ν∇u[4]",    16,    16,    16,    16 ],
 [ "s_gflux", "ν∇u[5]",    16,    16,    16,    16 ],
 [ "s_gflux", "ν∇u[6]",    16,    16,    16,    16 ],
 [ "s_gflux", "κ∇θ[1]",    16,    16,    16,    16 ],
 [ "s_gflux", "κ∇θ[2]",    16,    16,    16,    16 ],
 [ "s_gflux", "κ∇θ[3]",    16,    16,    16,    16 ],
]
# END SCPRINT
# ====================================================================================

    append!(refVals ,[ varr ] )
    append!(refPrecs,[ parr ] )

# ========== Test number 3 reference values and precision match template. =======
# ========== /Users/chrishill/projects/github.com/christophernhill/temp-clima-statetools/test/Ocean/HydrostaticBoussinesq/test_ocean_gyre.jl test reference values ======================================
# BEGIN SCPRINT
# varr - reference values (from reference run)    
# parr - digits match precision (hand edit as needed) 
#
# [
#  [ MPIStateArray Name, Field Name, Maximum, Minimum, Mean, Standard Deviation ],
#  [         :                :          :        :      :          :           ],
# ]
varr = [
 [       "Q",   "u[1]", -2.45059054748536786494e-01,  2.66827087434373833030e-01,  4.76333871607715220869e-03,  2.03747406191960751809e-02 ],
 [       "Q",   "u[2]", -9.19862187290226285263e-02,  1.40201403154182863142e-01, -2.27362735863156483623e-03,  1.77871796401971489499e-02 ],
 [       "Q",       :η, -6.12328361122860709287e-01,  6.15731382346345390566e-01, -1.87295967613840741092e-03,  2.26239119661140047901e-01 ],
 [       "Q",       :θ,  1.77896730352964066273e-04,  9.08085530670997265190e+00,  2.49942570089023075042e+00,  2.19721414537541104295e+00 ],
 [   "s_aux",       :w, -6.38528955902580800524e-05,  7.13616855988899397066e-05,  7.25292115808279761324e-07,  1.07066378411643909442e-05 ],
 [   "s_aux",    :pkin, -9.00831687175780659871e-01,  0.00000000000000000000e+00, -3.32065068404078900244e-01,  2.56218905086585790887e-01 ],
 [   "s_aux",     :wz0, -2.38584052240105604092e-05,  1.64726343374198928578e-05, -6.22788448423200439504e-08,  7.90855099224180849637e-06 ],
 [   "s_aux",       :y,  0.00000000000000000000e+00,  4.00000000000000046566e+06,  2.00000000000000000000e+06,  1.18025270281469495967e+06 ],
 [ "s_gflux", "ν∇u[1]", -1.21673224433518183119e-02,  1.23329495511112306044e-02, -4.87390935767953477210e-08,  3.32706765319932802703e-04 ],
 [ "s_gflux", "ν∇u[2]", -2.30079443798289267828e-03,  1.35292302164405631171e-02,  5.69691547231375371402e-05,  9.30351356755145116571e-04 ],
 [ "s_gflux", "ν∇u[3]", -2.40107213277701845081e-05,  2.21296311167068054373e-05,  2.01988496431492871556e-08,  2.36888787262018771880e-06 ],
 [ "s_gflux", "ν∇u[4]", -5.68804001845710921481e-03,  5.90848542892642627361e-03, -7.79965036105544326007e-06,  4.33767849182436007749e-04 ],
 [ "s_gflux", "ν∇u[5]", -1.75581603802762672463e-03,  7.79870406207827573247e-03,  1.38730733668206152043e-05,  4.35420460492884819816e-04 ],
 [ "s_gflux", "ν∇u[6]", -2.28582144657624645567e-05,  1.39787311673199512064e-05,  1.88006684392546013390e-08,  2.14809516804356890625e-06 ],
 [ "s_gflux", "κ∇θ[1]", -1.29104203797311087873e-04,  7.03366721525558078690e-05,  2.79279460845439770253e-06,  1.01724609263542151416e-05 ],
 [ "s_gflux", "κ∇θ[2]", -3.09352684820025968307e-03,  9.87606161451931038138e-05, -9.81753099377822300090e-04,  8.31561493704879037617e-04 ],
 [ "s_gflux", "κ∇θ[3]", -4.09380307533084353061e-05,  4.22849683605903807222e-05,  5.34924474148986324134e-07,  3.49117058821622099760e-06 ],
]
parr = [
 [       "Q",   "u[1]",    16,    16,    16,    16 ],
 [       "Q",   "u[2]",    16,    16,    16,    16 ],
 [       "Q",       :η,    16,    16,    16,    16 ],
 [       "Q",       :θ,    16,    16,    16,    16 ],
 [   "s_aux",       :w,    16,    16,    16,    16 ],
 [   "s_aux",    :pkin,    16,    16,    16,    16 ],
 [   "s_aux",     :wz0,    16,    16,    16,    16 ],
 [   "s_aux",       :y,    16,    16,    16,    16 ],
 [ "s_gflux", "ν∇u[1]",    16,    16,    16,    16 ],
 [ "s_gflux", "ν∇u[2]",    16,    16,    16,    16 ],
 [ "s_gflux", "ν∇u[3]",    16,    16,    16,    16 ],
 [ "s_gflux", "ν∇u[4]",    16,    16,    16,    16 ],
 [ "s_gflux", "ν∇u[5]",    16,    16,    16,    16 ],
 [ "s_gflux", "ν∇u[6]",    16,    16,    16,    16 ],
 [ "s_gflux", "κ∇θ[1]",    16,    16,    16,    16 ],
 [ "s_gflux", "κ∇θ[2]",    16,    16,    16,    16 ],
 [ "s_gflux", "κ∇θ[3]",    16,    16,    16,    16 ],
]
# END SCPRINT
# ====================================================================================

    append!(refVals ,[ varr ] )
    append!(refPrecs,[ parr ] )

# ========== Test number 4 reference values and precision match template. =======
# ========== /Users/chrishill/projects/github.com/christophernhill/temp-clima-statetools/test/Ocean/HydrostaticBoussinesq/test_ocean_gyre.jl test reference values ======================================
# BEGIN SCPRINT
# varr - reference values (from reference run)    
# parr - digits match precision (hand edit as needed) 
#
# [
#  [ MPIStateArray Name, Field Name, Maximum, Minimum, Mean, Standard Deviation ],
#  [         :                :          :        :      :          :           ],
# ]
varr = [
 [       "Q",   "u[1]", -2.45708903340409900995e-01,  2.67484935414617042149e-01,  4.76437055158953313982e-03,  2.03785998693744759003e-02 ],
 [       "Q",   "u[2]", -9.19497710684764463229e-02,  1.40084969959428679021e-01, -2.27454688752821857292e-03,  1.77812029740690540069e-02 ],
 [       "Q",       :η, -6.12228207102810673135e-01,  6.15726639166840894468e-01, -1.86959419719349853942e-03,  2.26227107092384749354e-01 ],
 [       "Q",       :θ,  2.41477933476231106059e-04,  9.10542070822847193767e+00,  2.49949917754466888198e+00,  2.19738932594447611280e+00 ],
 [   "s_aux",       :w, -6.37614595568089498985e-05,  7.14744579434440166239e-05,  7.23205108996910468593e-07,  1.06882847100126271732e-05 ],
 [   "s_aux",    :pkin, -9.00831015877546437132e-01,  0.00000000000000000000e+00, -3.32069517517551593411e-01,  2.56213339045328725163e-01 ],
 [   "s_aux",     :wz0, -2.39621684597349365333e-05,  1.66090461176639374893e-05, -6.19489844094663039358e-08,  7.95391001299523458439e-06 ],
 [   "s_aux",       :y,  0.00000000000000000000e+00,  4.00000000000000046566e+06,  2.00000000000000000000e+06,  1.18025270281469495967e+06 ],
 [ "s_gflux", "ν∇u[1]", -1.21832150196419970734e-02,  1.23518535695573208888e-02, -4.55981988954468087548e-08,  3.32964224206781659113e-04 ],
 [ "s_gflux", "ν∇u[2]", -2.30713503010992635953e-03,  1.35397886014327235860e-02,  5.70538096085275483181e-05,  9.32096086790075548274e-04 ],
 [ "s_gflux", "ν∇u[3]", -2.40460736242334660812e-05,  2.21588112898524066351e-05,  2.18665351563413780835e-08,  2.37179649309890357042e-06 ],
 [ "s_gflux", "ν∇u[4]", -5.67403799988407033655e-03,  5.89398183234324593571e-03, -7.82442255039539143907e-06,  4.33985316223624664235e-04 ],
 [ "s_gflux", "ν∇u[5]", -1.75446095323061922525e-03,  7.78650003580161256117e-03,  1.38379779541494392440e-05,  4.34437582532275809021e-04 ],
 [ "s_gflux", "ν∇u[6]", -2.28279703958716461191e-05,  1.39557657694387343602e-05,  1.86022700838169708167e-08,  2.14264898511958343293e-06 ],
 [ "s_gflux", "κ∇θ[1]", -1.42401738042073887922e-04,  7.01934653939859868731e-05,  2.80413590846721256833e-06,  1.02089709269089076379e-05 ],
 [ "s_gflux", "κ∇θ[2]", -3.07738818267229603809e-03,  1.04761850601885295620e-04, -9.82135244200856884211e-04,  8.31164287212290747373e-04 ],
 [ "s_gflux", "κ∇θ[3]", -3.44613095812756277023e-05,  1.22549022469770746007e-05,  4.54825252807224502028e-07,  1.66705056946526443927e-06 ],
]
parr = [
 [       "Q",   "u[1]",    16,    16,    16,    16 ],
 [       "Q",   "u[2]",    16,    16,    16,    16 ],
 [       "Q",       :η,    16,    16,    16,    16 ],
 [       "Q",       :θ,    16,    16,    16,    16 ],
 [   "s_aux",       :w,    16,    16,    16,    16 ],
 [   "s_aux",    :pkin,    16,    16,    16,    16 ],
 [   "s_aux",     :wz0,    16,    16,    16,    16 ],
 [   "s_aux",       :y,    16,    16,    16,    16 ],
 [ "s_gflux", "ν∇u[1]",    16,    16,    16,    16 ],
 [ "s_gflux", "ν∇u[2]",    16,    16,    16,    16 ],
 [ "s_gflux", "ν∇u[3]",    16,    16,    16,    16 ],
 [ "s_gflux", "ν∇u[4]",    16,    16,    16,    16 ],
 [ "s_gflux", "ν∇u[5]",    16,    16,    16,    16 ],
 [ "s_gflux", "ν∇u[6]",    16,    16,    16,    16 ],
 [ "s_gflux", "κ∇θ[1]",    16,    16,    16,    16 ],
 [ "s_gflux", "κ∇θ[2]",    16,    16,    16,    16 ],
 [ "s_gflux", "κ∇θ[3]",    16,    16,    16,    16 ],
]
# END SCPRINT
# ====================================================================================

    append!(refVals ,[ varr ] )
    append!(refPrecs,[ parr ] )

